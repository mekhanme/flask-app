name: Build
on:
  push:
    tags:
      - '!refs/tags/*'
    branches:
      - '*'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      working-directory: ./app
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt; 
    - name: Lint with flake8
      working-directory: ./app
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  docker_build_push:
    runs-on: ubuntu-latest
    needs: test
    # env:
    #   REGISTRY_LOGIN: ${{ secrets.REGISTRY_LOGIN }}
    #   REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: cr.yandex
          username: ${{ secrets.REGISTRY_LOGIN }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
        # run: |
        #   docker login \
        #    --username ${REGISTRY_LOGIN} \
        #    --password ${REGISTRY_PASSWORD} \
        #    cr.yandex
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./app
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: cr.yandex/crpgf4au6prfo3nhoduj/app/flask-app:latest
