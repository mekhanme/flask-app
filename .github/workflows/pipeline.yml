name: CI
on:
  push:
    # tags:
    #   - '!refs/tags/*'
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        working-directory: ./app
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
      - name: Lint with flake8
        working-directory: ./app
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Helm Lint
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm lint ./deploy
  bump_version:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Version Bump
        id: version-bump
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # skip-tag:  true
          commit-message: Bump version [skip ci]
      - name: Get app version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: ./
      - name: Remove Chart.yaml
        working-directory: deploy
        run: sudo rm -rf Chart.yaml
      - name: Create new Chart.yaml
        working-directory: deploy
        run: |
          cat <<EOF > Chart.yaml
          name: ${GITHUB_REPOSITORY#*/}
          apiVersion: v2
          type: application
          version: ${{ steps.version-bump.outputs.newTag }}
          appVersion: ${{ steps.package-version.outputs.current-version }}
          EOF
      - name: Commit the new Chart.yaml
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automated Change
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.4.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  build_push:
    runs-on: ubuntu-latest
    needs: bump_version
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: cr.yandex
          username: ${{ secrets.REGISTRY_LOGIN }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./app
          file: ./Dockerfile
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: cr.yandex/crpgf4au6prfo3nhoduj/app/flask-app:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_push
    steps:
      - uses: actions/checkout@v2
      - name: Helm deploy
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: |
            helm upgrade --install flask-app ./deploy --values ./deploy/values.yaml \
              --set env.CONTENTFUL_ACEESS_TOKEN=${CONTENTFUL_ACEESS_TOKEN} \
              --set env.CONTENTFUL_SPACE_ID=${CONTENTFUL_SPACE_ID} \
              --set env.CONTENTFUL_ABOUT_ENTRY_ID=${CONTENTFUL_ABOUT_ENTRY_ID} \
              --set env.CONTENTFUL_TOOLS_ENTRY_ID=${CONTENTFUL_TOOLS_ENTRY_ID} \
              --set env.CONTENTFUL_SITE_ENTRY_ID=${CONTENTFUL_SITE_ENTRY_ID}
          kubeconfig: ${{ secrets.KUBECONFIG }}
        env:
          CONTENTFUL_ACEESS_TOKEN: ${{ secrets.CONTENTFUL_ACEESS_TOKEN }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ABOUT_ENTRY_ID: ${{ secrets.CONTENTFUL_ABOUT_ENTRY_ID }}
          CONTENTFUL_TOOLS_ENTRY_ID: ${{ secrets.CONTENTFUL_TOOLS_ENTRY_ID }}
          CONTENTFUL_SITE_ENTRY_ID: ${{ secrets.CONTENTFUL_SITE_ENTRY_ID }}
